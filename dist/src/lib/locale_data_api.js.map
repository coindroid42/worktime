{"version":3,"file":"locale_data_api.js","sourceRoot":"src/","sources":["src/lib/locale_data_api.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AAavE,SAAS,mBAAmB,CAAI,IAAS,EAAE,KAAa;IACtD,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;QAC/B,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;YAClC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;SAChB;KACF;IACD,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;AAC5D,CAAC;AAED,SAAS,aAAa,CAAC,IAAS;IAC9B,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAE;QACrC,MAAM,IAAI,KAAK,CAAC,6CAA6C,IAAI,CAAC,gBAAgB;aAC/E,QAAQ,CAAC,gGAAgG,CAAC,CAAC;KAC/G;AACH,CAAC;AAED,SAAS,WAAW,CAAC,IAAY;IAC/B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC/B,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC;AACpC,CAAC;AAED,MAAM,CAAN,IAAY,WAqBX;AArBD,WAAY,WAAW;IACrB;;;OAGG;IACH,+CAAK,CAAA;IACL;;;OAGG;IACH,iDAAM,CAAA;IACN;;;OAGG;IACH,6CAAI,CAAA;IACJ;;;OAGG;IACH,6CAAI,CAAA;AACN,CAAC,EArBW,WAAW,KAAX,WAAW,QAqBtB;AAED,MAAM,CAAN,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,6CAAM,CAAA;IACN,qDAAU,CAAA;AACZ,CAAC,EAHW,SAAS,KAAT,SAAS,QAGpB;AAED,MAAM,UAAU,WAAW,CAAC,MAAc;IACxC,OAAO,eAAe,CAAC,MAAM,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AAC5D,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,MAAc,EAAE,KAAkB;IACpE,MAAM,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;IACrC,OAAO,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;AACvE,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,MAAc,EAAE,KAAkB;IACpE,MAAM,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;IACrC,OAAO,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;AACvE,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,MAAc,EAAE,KAAkB;IACxE,MAAM,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;IACrC,MAAM,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAa,CAAC;IAC7E,OAAO,mBAAmB,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;AACxD,CAAC;AAED,MAAM,UAAU,mBAAmB,CACjC,MAAc,EAAE,SAAoB,EAAE,KAAuB;IAC7D,MAAM,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;IACrC,MAAM,UAAU,GACd,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAiB,CAAC;IACjG,MAAM,MAAM,GAAG,mBAAmB,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;IAC1D,OAAO,mBAAmB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC5C,CAAC;AAED,MAAM,UAAU,iBAAiB,CAC/B,MAAc,EAAE,SAAoB,EAAE,KAAuB;IAC7D,MAAM,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;IACrC,MAAM,QAAQ,GACZ,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAiB,CAAC;IAC7F,MAAM,IAAI,GAAG,mBAAmB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IACtD,OAAO,mBAAmB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC;AAED,MAAM,UAAU,iBAAiB,CAC/B,MAAc,EAAE,KAAuB;IACvC,MAAM,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;IACrC,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAuB,CAAC;IACnE,OAAO,mBAAmB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC9C,CAAC;AAED,MAAM,UAAU,mBAAmB,CACjC,MAAc,EAAE,SAAoB,EAAE,KAAuB;IAC7D,MAAM,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;IACrC,MAAM,QAAQ,GAAG;QACf,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC;KAC7D,CAAC;IAC1B,MAAM,IAAI,GAAG,mBAAmB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IACtD,OAAO,mBAAmB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC;AAED,MAAM,UAAU,wBAAwB,CACtC,MAAc,EAAE,SAAoB,EAAE,KAAuB;IAC7D,MAAM,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;IACrC,aAAa,CAAC,IAAI,CAAC,CAAC;IACpB,MAAM,cAAc,GAAG;QACrB,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,+BAA6C;QAC7E,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,kCAAgD;KACjE,CAAC;IAClB,MAAM,UAAU,GAAG,mBAAmB,CAAC,cAAc,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC;IACxE,OAAO,mBAAmB,CAAC,UAAU,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;AACtD,CAAC;AAED,MAAM,UAAU,4BAA4B,CAAC,MAAc;IACzD,MAAM,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;IACrC,aAAa,CAAC,IAAI,CAAC,CAAC;IACpB,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,8BAA4C,IAAI,EAAE,CAAC;IACjG,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAA+B,EAAE,EAAE;QACnD,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC5B,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC;SAC1B;QACD,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,UAAU,qBAAqB,CAAC,MAAc,EAAE,MAAoB;IACxE,MAAM,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;IACrC,MAAM,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,CAAC;IACzD,IAAI,OAAO,GAAG,KAAK,WAAW,EAAE;QAC9B,IAAI,MAAM,KAAK,YAAY,CAAC,eAAe,EAAE;YAC3C,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACnE;aAAM,IAAI,MAAM,KAAK,YAAY,CAAC,aAAa,EAAE;YAChD,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SACjE;KACF;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAED,MAAM,CAAN,IAAY,gBASX;AATD,WAAY,gBAAgB;IAC1B,gDAAgD;IAChD,2DAAM,CAAA;IACN,mDAAmD;IACnD,qEAAW,CAAA;IACX,qDAAqD;IACrD,uDAAI,CAAA;IACJ,kDAAkD;IAClD,yDAAK,CAAA;AACP,CAAC,EATW,gBAAgB,KAAhB,gBAAgB,QAS3B;AAED,MAAM,CAAN,IAAY,YAyEX;AAzED,WAAY,YAAY;IACtB;;;;OAIG;IACH,qDAAO,CAAA;IACP;;;;OAIG;IACH,iDAAK,CAAA;IACL;;;OAGG;IACH,+CAAI,CAAA;IACJ;;;OAGG;IACH,6DAAW,CAAA;IACX;;;OAGG;IACH,uDAAQ,CAAA;IACR;;;OAGG;IACH,yDAAS,CAAA;IACT;;;OAGG;IACH,6DAAW,CAAA;IACX;;;OAGG;IACH,mFAAsB,CAAA;IACtB;;;OAGG;IACH,uDAAQ,CAAA;IACR;;;OAGG;IACH,uDAAQ,CAAA;IACR;;;OAGG;IACH,8CAAG,CAAA;IACH;;;OAGG;IACH,kEAAa,CAAA;IACb;;;OAGG;IACH,sEAAe,CAAA;IACf;;;OAGG;IACH,kEAAa,CAAA;AACf,CAAC,EAzEW,YAAY,KAAZ,YAAY,QAyEvB","sourcesContent":["import { ɵfindLocaleData, ɵLocaleDataIndex } from './locale_data_core';\r\n\r\ntype Time = {\r\n  hours: number,\r\n  minutes: number\r\n};\r\n\r\nconst enum ɵExtraLocaleDataIndex {\r\n  ExtraDayPeriodFormats = 0,\r\n  ExtraDayPeriodStandalone,\r\n  ExtraDayPeriodsRules\r\n}\r\n\r\nfunction getLastDefinedValue<T>(data: T[], index: number): T {\r\n  for (let i = index; i > -1; i--) {\r\n    if (typeof data[i] !== 'undefined') {\r\n      return data[i];\r\n    }\r\n  }\r\n  throw new Error('Locale data API: locale data undefined');\r\n}\r\n\r\nfunction checkFullData(data: any): void {\r\n  if (!data[ɵLocaleDataIndex.ExtraData]) {\r\n    throw new Error(`Missing extra locale data for the locale \"${data[ɵLocaleDataIndex\r\n      .LocaleId]}\". Use \"registerLocaleData\" to load new data. See the \"I18n guide\" on angular.io to know more.`);\r\n  }\r\n}\r\n\r\nfunction extractTime(time: string): Time {\r\n  const [h, m] = time.split(':');\r\n  return { hours: +h, minutes: +m };\r\n}\r\n\r\nexport enum FormatWidth {\r\n  /**\r\n   * For `en-US`, 'M/d/yy, h:mm a'`\r\n   * (Example: `6/15/15, 9:03 AM`)\r\n   */\r\n  Short,\r\n  /**\r\n   * For `en-US`, `'MMM d, y, h:mm:ss a'`\r\n   * (Example: `Jun 15, 2015, 9:03:01 AM`)\r\n   */\r\n  Medium,\r\n  /**\r\n   * For `en-US`, `'MMMM d, y, h:mm:ss a z'`\r\n   * (Example: `June 15, 2015 at 9:03:01 AM GMT+1`)\r\n   */\r\n  Long,\r\n  /**\r\n   * For `en-US`, `'EEEE, MMMM d, y, h:mm:ss a zzzz'`\r\n   * (Example: `Monday, June 15, 2015 at 9:03:01 AM GMT+01:00`)\r\n   */\r\n  Full\r\n}\r\n\r\nexport enum FormStyle {\r\n  Format,\r\n  Standalone\r\n}\r\n\r\nexport function getLocaleId(locale: string): string {\r\n  return ɵfindLocaleData(locale)[ɵLocaleDataIndex.LocaleId];\r\n}\r\n\r\nexport function getLocaleDateFormat(locale: string, width: FormatWidth): string {\r\n  const data = ɵfindLocaleData(locale);\r\n  return getLastDefinedValue(data[ɵLocaleDataIndex.DateFormat], width);\r\n}\r\n\r\nexport function getLocaleTimeFormat(locale: string, width: FormatWidth): string {\r\n  const data = ɵfindLocaleData(locale);\r\n  return getLastDefinedValue(data[ɵLocaleDataIndex.TimeFormat], width);\r\n}\r\n\r\nexport function getLocaleDateTimeFormat(locale: string, width: FormatWidth): string {\r\n  const data = ɵfindLocaleData(locale);\r\n  const dateTimeFormatData = data[ɵLocaleDataIndex.DateTimeFormat] as string[];\r\n  return getLastDefinedValue(dateTimeFormatData, width);\r\n}\r\n\r\nexport function getLocaleMonthNames(\r\n  locale: string, formStyle: FormStyle, width: TranslationWidth): ReadonlyArray<string> {\r\n  const data = ɵfindLocaleData(locale);\r\n  const monthsData =\r\n    [data[ɵLocaleDataIndex.MonthsFormat], data[ɵLocaleDataIndex.MonthsStandalone]] as string[][][];\r\n  const months = getLastDefinedValue(monthsData, formStyle);\r\n  return getLastDefinedValue(months, width);\r\n}\r\n\r\nexport function getLocaleDayNames(\r\n  locale: string, formStyle: FormStyle, width: TranslationWidth): ReadonlyArray<string> {\r\n  const data = ɵfindLocaleData(locale);\r\n  const daysData =\r\n    [data[ɵLocaleDataIndex.DaysFormat], data[ɵLocaleDataIndex.DaysStandalone]] as string[][][];\r\n  const days = getLastDefinedValue(daysData, formStyle);\r\n  return getLastDefinedValue(days, width);\r\n}\r\n\r\nexport function getLocaleEraNames(\r\n  locale: string, width: TranslationWidth): Readonly<[string, string]> {\r\n  const data = ɵfindLocaleData(locale);\r\n  const erasData = data[ɵLocaleDataIndex.Eras] as [string, string][];\r\n  return getLastDefinedValue(erasData, width);\r\n}\r\n\r\nexport function getLocaleDayPeriods(\r\n  locale: string, formStyle: FormStyle, width: TranslationWidth): Readonly<[string, string]> {\r\n  const data = ɵfindLocaleData(locale);\r\n  const amPmData = [\r\n    data[ɵLocaleDataIndex.DayPeriodsFormat], data[ɵLocaleDataIndex.DayPeriodsStandalone]\r\n  ] as [string, string][][];\r\n  const amPm = getLastDefinedValue(amPmData, formStyle);\r\n  return getLastDefinedValue(amPm, width);\r\n}\r\n\r\nexport function getLocaleExtraDayPeriods(\r\n  locale: string, formStyle: FormStyle, width: TranslationWidth): string[] {\r\n  const data = ɵfindLocaleData(locale);\r\n  checkFullData(data);\r\n  const dayPeriodsData = [\r\n    data[ɵLocaleDataIndex.ExtraData][ɵExtraLocaleDataIndex.ExtraDayPeriodFormats],\r\n    data[ɵLocaleDataIndex.ExtraData][ɵExtraLocaleDataIndex.ExtraDayPeriodStandalone]\r\n  ] as string[][][];\r\n  const dayPeriods = getLastDefinedValue(dayPeriodsData, formStyle) || [];\r\n  return getLastDefinedValue(dayPeriods, width) || [];\r\n}\r\n\r\nexport function getLocaleExtraDayPeriodRules(locale: string): (Time | [Time, Time])[] {\r\n  const data = ɵfindLocaleData(locale);\r\n  checkFullData(data);\r\n  const rules = data[ɵLocaleDataIndex.ExtraData][ɵExtraLocaleDataIndex.ExtraDayPeriodsRules] || [];\r\n  return rules.map((rule: string | [string, string]) => {\r\n    if (typeof rule === 'string') {\r\n      return extractTime(rule);\r\n    }\r\n    return [extractTime(rule[0]), extractTime(rule[1])];\r\n  });\r\n}\r\n\r\nexport function getLocaleNumberSymbol(locale: string, symbol: NumberSymbol): string {\r\n  const data = ɵfindLocaleData(locale);\r\n  const res = data[ɵLocaleDataIndex.NumberSymbols][symbol];\r\n  if (typeof res === 'undefined') {\r\n    if (symbol === NumberSymbol.CurrencyDecimal) {\r\n      return data[ɵLocaleDataIndex.NumberSymbols][NumberSymbol.Decimal];\r\n    } else if (symbol === NumberSymbol.CurrencyGroup) {\r\n      return data[ɵLocaleDataIndex.NumberSymbols][NumberSymbol.Group];\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\nexport enum TranslationWidth {\r\n  /** 1 character for `en-US`. For example: 'S' */\r\n  Narrow,\r\n  /** 3 characters for `en-US`. For example: 'Sun' */\r\n  Abbreviated,\r\n  /** Full length for `en-US`. For example: \"Sunday\" */\r\n  Wide,\r\n  /** 2 characters for `en-US`, For example: \"Su\" */\r\n  Short\r\n}\r\n\r\nexport enum NumberSymbol {\r\n  /**\r\n   * Decimal separator.\r\n   * For `en-US`, the dot character.\r\n   * Example : 2,345`.`67\r\n   */\r\n  Decimal,\r\n  /**\r\n   * Grouping separator, typically for thousands.\r\n   * For `en-US`, the comma character.\r\n   * Example: 2`,`345.67\r\n   */\r\n  Group,\r\n  /**\r\n   * List-item separator.\r\n   * Example: \"one, two, and three\"\r\n   */\r\n  List,\r\n  /**\r\n   * Sign for percentage (out of 100).\r\n   * Example: 23.4%\r\n   */\r\n  PercentSign,\r\n  /**\r\n   * Sign for positive numbers.\r\n   * Example: +23\r\n   */\r\n  PlusSign,\r\n  /**\r\n   * Sign for negative numbers.\r\n   * Example: -23\r\n   */\r\n  MinusSign,\r\n  /**\r\n   * Computer notation for exponential value (n times a power of 10).\r\n   * Example: 1.2E3\r\n   */\r\n  Exponential,\r\n  /**\r\n   * Human-readable format of exponential.\r\n   * Example: 1.2x103\r\n   */\r\n  SuperscriptingExponent,\r\n  /**\r\n   * Sign for permille (out of 1000).\r\n   * Example: 23.4‰\r\n   */\r\n  PerMille,\r\n  /**\r\n   * Infinity, can be used with plus and minus.\r\n   * Example: ∞, +∞, -∞\r\n   */\r\n  Infinity,\r\n  /**\r\n   * Not a number.\r\n   * Example: NaN\r\n   */\r\n  NaN,\r\n  /**\r\n   * Symbol used between time units.\r\n   * Example: 10:52\r\n   */\r\n  TimeSeparator,\r\n  /**\r\n   * Decimal separator for currency values (fallback to `Decimal`).\r\n   * Example: $2,345.67\r\n   */\r\n  CurrencyDecimal,\r\n  /**\r\n   * Group separator for currency values (fallback to `Group`).\r\n   * Example: $2,345.67\r\n   */\r\n  CurrencyGroup\r\n}\r\n"]}